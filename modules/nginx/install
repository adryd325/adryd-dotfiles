#!/bin/bash
source $AR_DIR/lib/logger.sh
source ~/.adryd/install.sh
arModule='nginx'
arModuleDistro=('efedora')
arNginxSrcDir='/usr/local/src'

function install() {
    log 3 $arModule 'Installing dependencies'
    sudo dnf install git mercurial libmaxminddb libmaxminddb-devel pcre pcre-devel openssl openssl-devel zlib zlib-devel libxslt libxslt-devel -qy

    # headers-more-nginx-module
    log 3 $arModule 'Fetching headers-more-nginx-module'
    if [[ ! -e $arNginxSrcDir/headers-more-nginx-module ]]; then
       sudo git clone https://github.com/openresty/headers-more-nginx-module $arNginxSrcDir/headers-more-nginx-module -q
    fi
    cd $arNginxSrcDir/headers-more-nginx-module
    sudo git pull --ff-only -q

    # ngx_http_geoip2_module
    log 3 $arModule 'Fetching ngx_http_geoip2_module'
    if [[ ! -e $arNginxSrcDir/ngx_http_geoip2_module ]]; then
        sudo git clone https://github.com/leev/ngx_http_geoip2_module $arNginxSrcDir/ngx_http_geoip2_module -q
    fi
    cd $arNginxSrcDir/ngx_http_geoip2_module
    sudo git pull --ff-only -q

    # ngx_brotli
    log 3 $arModule 'Fetching ngx_brotli'
    if [[ ! -e $arNginxSrcDir/ngx_brotli ]]; then
        sudo git clone https://github.com/google/ngx_brotli $arNginxSrcDir/ngx_brotli -q
        cd $arNginxSrcDir/ngx_brotli
        sudo git submodule update --init -q
    fi
    cd $arNginxSrcDir/ngx_brotli
    sudo git pull --ff-only -q
    sudo git submodule update -q

    # nginx-dav-ext-module
    log 3 $arModule 'Fetching nginx-dav-ext-module'
    if [[ ! -e $arNginxSrcDir/nginx-dav-ext-module ]]; then
        sudo git clone https://github.com/arut/nginx-dav-ext-module $arNginxSrcDir/nginx-dav-ext-module -q
    fi
    cd $arNginxSrcDir/nginx-dav-ext-module
    sudo git pull --ff-only -q

    # nginx
    log 3 $arModule 'Fetching nginx'
    if [[ ! -e $arNginxSrcDir/nginx ]]; then
        cd $arNginxSrcDir
        sudo hg clone http://hg.nginx.org/nginx > $AR_TTY
    fi
    cd $arNginxSrcDir/nginx
    sudo hg pull > $AR_TTY
    log 3 $arModule 'Configuring'
    sudo ./auto/configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/lib/nginx/tmp/client_body --http-proxy-temp-path=/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path=/var/lib/nginx/tmp/scgi --pid-path=/run/nginx.pid --lock-path=/run/lock/subsys/nginx --user=nginx --group=nginx\
        --with-compat \
        --with-file-aio \
        --with-threads \
        --with-http_addition_module \
        --with-http_auth_request_module \
        --with-http_dav_module \
        --with-http_flv_module \
        --with-http_gunzip_module \
        --with-http_gzip_static_module \
        --with-http_mp4_module \
        --with-http_random_index_module \
        --with-http_realip_module \
        --with-http_secure_link_module \
        --with-http_slice_module \
        --with-http_ssl_module \
        --with-http_stub_status_module \
        --with-http_sub_module \
        --with-http_v2_module \
        --with-mail \
        --with-mail_ssl_module \
        --with-stream \
        --with-stream_realip_module \
        --with-stream_ssl_module \
        --with-stream_ssl_preread_module \
        --add-module=/usr/local/src/ngx_brotli \
        --add-module=/usr/local/src/ngx_http_geoip2_module \
        --add-module=/usr/local/src/headers-more-nginx-module \
        --add-module=/usr/local/src/nginx-dav-ext-module \
        --with-cc-opt='-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -D_FORTIFY_SOURCE=2' \
        --with-ld-opt='-Wl,-rpath,/usr/local/lib,-O1,--sort-common,--as-needed,-z,relro,-z,now' > $AR_TTY
    log 3 $arModule 'Building'
    sudo make > $AR_TTY
    log 3 $arModule 'Installing'
    sudo make install > $AR_TTY

    cd /etc/nginx
    log 3 $arModule 'Tidying up'
    sudo rm -rf fastcgi.conf fastcgi_params html mime.types.default nginx.conf.default scgi_params.default uwsgi_params.default fastcgi.conf.default fastcgi_params.default koi-utf scgi_params uwsgi_params

    log 3 $arModule 'Restarting nginx service'
    sudo systemctl restart nginx
}

install